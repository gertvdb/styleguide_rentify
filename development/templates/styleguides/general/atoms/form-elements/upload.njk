{# ------------------------#}
{# -------Code block-------#}
{# ------------------------#}
{% macro code() %}
	<div class="a-input a-input--with-button a-input--upload">
		<label for="input-upload">Upload</label>
		<div class="a-input__field-holder">

			<input type="text" name="input-upload-placeholder" id="input-upload-placeholder" placeholder="Select your file" />
			<input type="file" name="input-upload" id="input-upload" />
			<input type="submit" class="a-button" value="Upload" />

		</div>
		<small>Tell the user what kind of input is expected, add a <a href="#" title="">clickthrough as needed</a></small>
	</div>
	<script>
		$(".a-input--upload input[type='file']").change(function(){
			$(this).parent().find("input[type='text']").val($(this).val());
		});
	</script>
{% endmacro %}

{# ----------------------------#}
{# ------Styleguide block------#}
{# ----------------------------#}
{% macro styleguide() %}
	<h4 class="styleguide__sub-title js-scroll-nav__sub-title">Upload</h4>
	<small>/sass/atoms/form-elements/upload.scss</small>
	<p class="styleguide__p">
		By default upload fields aren't easy to style in a specific look&amp; feel.
		The trick is to use a hidden field to display input value and some additional
		javascript to make this work.<br /><br />
		<em>
			Note: Javascript functionality in the source code is just a prototype
			(not present in production /js/main.js). The actual submit/upload
			functionality is also not implemented.
		</em>
	</p>

	{{code()}}

	<div class="styleguide__highlight-box">
		<code class="js-encode-html prettyprint">
			{{code()}}
		</code>
	</div>
{% endmacro %}
